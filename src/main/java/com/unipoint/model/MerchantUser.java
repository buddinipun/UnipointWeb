package com.unipoint.model;
// Generated Oct 18, 2016 4:59:22 PM by Hibernate Tools 5.1.0.Beta1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * MerchantUser generated by hbm2java
 */
@Entity
@Table(name = "merchant_user", schema = "unipointmain")
public class MerchantUser implements java.io.Serializable {

	private long merchantUserId;
	private AccessPrivilleges accessPrivilleges;
	private Merchant merchant;
	private MerchantUser merchantUserByAddedByRef;
	private MerchantUser merchantUserByLastModifiedByRef;
	private Outlet outlet;
	private String username;
	private String emailaddress;
	private String firstname;
	private String lastname;
	private String createddatetime;
	private String nicNumber;
	private BigDecimal mobilephonenumber;
	private String enabled;
	private String isOutletUser;
	private String addedDateTime;
	private String lastModifiedDateTime;
	private String lastModifiedFields;
	private Set<PointRewardType> pointRewardTypesForAddedByRef = new HashSet<PointRewardType>(0);
	private Set<CustomerRequests> customerRequestses = new HashSet<CustomerRequests>(0);
	private Set<Leaflet> leafletsForLastModifiedByRef = new HashSet<Leaflet>(0);
	private Set<Payment> payments = new HashSet<Payment>(0);
	private Set<AccessPrivilleges> accessPrivillegesesForLastModifiedByRef = new HashSet<AccessPrivilleges>(0);
	private Set<PointConversion> pointConversionsForLastModifiedByRef = new HashSet<PointConversion>(0);
	private Set<MerchantCustomerUnipointRewards> merchantCustomerUnipointRewardsesForAddedByRef = new HashSet<MerchantCustomerUnipointRewards>(
			0);
	private Set<AssignedCoupons> assignedCouponsesForAddedByRef = new HashSet<AssignedCoupons>(0);
	private Set<Faq> faqsForLastModifiedByRef = new HashSet<Faq>(0);
	private Set<BuyPoint> buyPointsForAddedByRef = new HashSet<BuyPoint>(0);
	private Set<MerchantCustomer> merchantCustomersForAddedByRef = new HashSet<MerchantCustomer>(0);
	private Set<MerchantUser> merchantUsersForAddedByRef = new HashSet<MerchantUser>(0);
	private Set<Catagory> catagoriesForAddedByRef = new HashSet<Catagory>(0);
	private Set<FeedbackTemplate> feedbackTemplatesForAddedByRef = new HashSet<FeedbackTemplate>(0);
	private Set<Offer> offersForAddedByRef = new HashSet<Offer>(0);
	private Set<Catagory> catagoriesForLastModifiedByRef = new HashSet<Catagory>(0);
	private Set<AppInvite> appInvitesForAddedByRef = new HashSet<AppInvite>(0);
	private Set<Faq> faqsForAddedByRef = new HashSet<Faq>(0);
	private Set<PointRewards> pointRewardsesForAddedByRef = new HashSet<PointRewards>(0);
	private Set<SubscribeMerchant> subscribeMerchantsForLastModifiedByRef = new HashSet<SubscribeMerchant>(0);
	private Set<AssingedVoucher> assingedVouchersForAddedByRef = new HashSet<AssingedVoucher>(0);
	private Set<MerchantCustomer> merchantCustomersForLastModifiedByRef = new HashSet<MerchantCustomer>(0);
	private Set<BuyPoint> buyPointsForLastModifiedByRef = new HashSet<BuyPoint>(0);
	private Set<Outlet> outletsForLastModifiedByRef = new HashSet<Outlet>(0);
	private Set<Vouchers> vouchersesForLastModifiedByRef = new HashSet<Vouchers>(0);
	private Set<PointRewardType> pointRewardTypesForLastModifiedByRef = new HashSet<PointRewardType>(0);
	private Set<SubscribeMerchant> subscribeMerchantsForAddedByRef = new HashSet<SubscribeMerchant>(0);
	private Set<LoyaltyScheme> loyaltySchemesForLastModifiedByRef = new HashSet<LoyaltyScheme>(0);
	private Set<LoyaltyScheme> loyaltySchemesForAddedByRef = new HashSet<LoyaltyScheme>(0);
	private Set<Organization> organizationsForAddedByRef = new HashSet<Organization>(0);
	private Set<Vouchers> vouchersesForAssignedByRef = new HashSet<Vouchers>(0);
	private Set<Coupons> couponses = new HashSet<Coupons>(0);
	private Set<AssingedVoucher> assingedVouchersForClaimedByMerchantUserRefId = new HashSet<AssingedVoucher>(0);
	private Set<PointConversion> pointConversionsForAddedByRef = new HashSet<PointConversion>(0);
	private Set<Organization> organizationsForLastModifiedByRef = new HashSet<Organization>(0);
	private Set<AppInvite> appInvitesForLastModifiedByRef = new HashSet<AppInvite>(0);
	private Set<MerchantFeedback> merchantFeedbacks = new HashSet<MerchantFeedback>(0);
	private Set<MerchantCategory> merchantCategoriesForLastModifiedByRef = new HashSet<MerchantCategory>(0);
	private Set<AssignedCoupons> assignedCouponsesForLastModifiedByRef = new HashSet<AssignedCoupons>(0);
	private Set<AccessPrivilleges> accessPrivillegesesForAddedByRef = new HashSet<AccessPrivilleges>(0);
	private Set<Merchant> merchantsForAddedByRef = new HashSet<Merchant>(0);
	private Set<PointRewards> pointRewardsesForLastModifiedByRef = new HashSet<PointRewards>(0);
	private Set<DisabledCustomer> disabledCustomersForAddedByRef = new HashSet<DisabledCustomer>(0);
	private Set<Outlet> outletsForAddedByRef = new HashSet<Outlet>(0);
	private Set<Vouchers> vouchersesForCreatedByRef = new HashSet<Vouchers>(0);
	private Set<Vouchers> vouchersesForAssignedByRef_1 = new HashSet<Vouchers>(0);
	private Set<AssingedVoucher> assingedVouchersForAssignedByMerchantUserRefId = new HashSet<AssingedVoucher>(0);
	private Set<MerchantCustomerUnipointRewards> merchantCustomerUnipointRewardsesForLastModifiedByRef = new HashSet<MerchantCustomerUnipointRewards>(
			0);
	private Set<OfferLeaflet> offerLeafletsForAddedByRef = new HashSet<OfferLeaflet>(0);
	private Set<Product> productsForAddedbyRefId = new HashSet<Product>(0);
	private Set<Leaflet> leafletsForAddedByRef = new HashSet<Leaflet>(0);
	private Set<MerchantProfile> merchantProfilesForAddedByRef = new HashSet<MerchantProfile>(0);
	private Set<OfferClaim> offerClaimsForLastModifiedByRef = new HashSet<OfferClaim>(0);
	private Set<MerchantCategory> merchantCategoriesForAddedByRef = new HashSet<MerchantCategory>(0);
	private Set<MerchantProfile> merchantProfilesForLastModifiedByRef = new HashSet<MerchantProfile>(0);
	private Set<Product> productsForLastModifiedByRef = new HashSet<Product>(0);
	private Set<Merchant> merchantsForLastModifiedByRef = new HashSet<Merchant>(0);
	private Set<DisabledCustomer> disabledCustomersForLastModifiedByRef = new HashSet<DisabledCustomer>(0);
	private Set<Product> productsForAddedByRef = new HashSet<Product>(0);
	private Set<AssingedVoucher> assingedVouchersForLastModifiedByRef = new HashSet<AssingedVoucher>(0);
	private Set<OfferLeaflet> offerLeafletsForLastModifiedByRef = new HashSet<OfferLeaflet>(0);
	private Set<Offer> offersForLastModifiedByRef = new HashSet<Offer>(0);
	private Set<OfferClaim> offerClaimsForAddedByRef = new HashSet<OfferClaim>(0);
	private Set<FeedbackTemplate> feedbackTemplatesForLastModifiedByRef = new HashSet<FeedbackTemplate>(0);
	private Set<MerchantUser> merchantUsersForLastModifiedByRef = new HashSet<MerchantUser>(0);

	public MerchantUser() {
	}

	public MerchantUser(long merchantUserId) {
		this.merchantUserId = merchantUserId;
	}

	public MerchantUser(long merchantUserId, AccessPrivilleges accessPrivilleges, Merchant merchant,
			MerchantUser merchantUserByAddedByRef, MerchantUser merchantUserByLastModifiedByRef, Outlet outlet,
			String username, String emailaddress, String firstname, String lastname, String createddatetime,
			String nicNumber, BigDecimal mobilephonenumber, String enabled, String isOutletUser, String addedDateTime,
			String lastModifiedDateTime, String lastModifiedFields, Set<PointRewardType> pointRewardTypesForAddedByRef,
			Set<CustomerRequests> customerRequestses, Set<Leaflet> leafletsForLastModifiedByRef, Set<Payment> payments,
			Set<AccessPrivilleges> accessPrivillegesesForLastModifiedByRef,
			Set<PointConversion> pointConversionsForLastModifiedByRef,
			Set<MerchantCustomerUnipointRewards> merchantCustomerUnipointRewardsesForAddedByRef,
			Set<AssignedCoupons> assignedCouponsesForAddedByRef, Set<Faq> faqsForLastModifiedByRef,
			Set<BuyPoint> buyPointsForAddedByRef, Set<MerchantCustomer> merchantCustomersForAddedByRef,
			Set<MerchantUser> merchantUsersForAddedByRef, Set<Catagory> catagoriesForAddedByRef,
			Set<FeedbackTemplate> feedbackTemplatesForAddedByRef, Set<Offer> offersForAddedByRef,
			Set<Catagory> catagoriesForLastModifiedByRef, Set<AppInvite> appInvitesForAddedByRef,
			Set<Faq> faqsForAddedByRef, Set<PointRewards> pointRewardsesForAddedByRef,
			Set<SubscribeMerchant> subscribeMerchantsForLastModifiedByRef,
			Set<AssingedVoucher> assingedVouchersForAddedByRef,
			Set<MerchantCustomer> merchantCustomersForLastModifiedByRef, Set<BuyPoint> buyPointsForLastModifiedByRef,
			Set<Outlet> outletsForLastModifiedByRef, Set<Vouchers> vouchersesForLastModifiedByRef,
			Set<PointRewardType> pointRewardTypesForLastModifiedByRef,
			Set<SubscribeMerchant> subscribeMerchantsForAddedByRef,
			Set<LoyaltyScheme> loyaltySchemesForLastModifiedByRef, Set<LoyaltyScheme> loyaltySchemesForAddedByRef,
			Set<Organization> organizationsForAddedByRef, Set<Vouchers> vouchersesForAssignedByRef,
			Set<Coupons> couponses, Set<AssingedVoucher> assingedVouchersForClaimedByMerchantUserRefId,
			Set<PointConversion> pointConversionsForAddedByRef, Set<Organization> organizationsForLastModifiedByRef,
			Set<AppInvite> appInvitesForLastModifiedByRef, Set<MerchantFeedback> merchantFeedbacks,
			Set<MerchantCategory> merchantCategoriesForLastModifiedByRef,
			Set<AssignedCoupons> assignedCouponsesForLastModifiedByRef,
			Set<AccessPrivilleges> accessPrivillegesesForAddedByRef, Set<Merchant> merchantsForAddedByRef,
			Set<PointRewards> pointRewardsesForLastModifiedByRef, Set<DisabledCustomer> disabledCustomersForAddedByRef,
			Set<Outlet> outletsForAddedByRef, Set<Vouchers> vouchersesForCreatedByRef,
			Set<Vouchers> vouchersesForAssignedByRef_1,
			Set<AssingedVoucher> assingedVouchersForAssignedByMerchantUserRefId,
			Set<MerchantCustomerUnipointRewards> merchantCustomerUnipointRewardsesForLastModifiedByRef,
			Set<OfferLeaflet> offerLeafletsForAddedByRef, Set<Product> productsForAddedbyRefId,
			Set<Leaflet> leafletsForAddedByRef, Set<MerchantProfile> merchantProfilesForAddedByRef,
			Set<OfferClaim> offerClaimsForLastModifiedByRef, Set<MerchantCategory> merchantCategoriesForAddedByRef,
			Set<MerchantProfile> merchantProfilesForLastModifiedByRef, Set<Product> productsForLastModifiedByRef,
			Set<Merchant> merchantsForLastModifiedByRef, Set<DisabledCustomer> disabledCustomersForLastModifiedByRef,
			Set<Product> productsForAddedByRef, Set<AssingedVoucher> assingedVouchersForLastModifiedByRef,
			Set<OfferLeaflet> offerLeafletsForLastModifiedByRef, Set<Offer> offersForLastModifiedByRef,
			Set<OfferClaim> offerClaimsForAddedByRef, Set<FeedbackTemplate> feedbackTemplatesForLastModifiedByRef,
			Set<MerchantUser> merchantUsersForLastModifiedByRef) {
		this.merchantUserId = merchantUserId;
		this.accessPrivilleges = accessPrivilleges;
		this.merchant = merchant;
		this.merchantUserByAddedByRef = merchantUserByAddedByRef;
		this.merchantUserByLastModifiedByRef = merchantUserByLastModifiedByRef;
		this.outlet = outlet;
		this.username = username;
		this.emailaddress = emailaddress;
		this.firstname = firstname;
		this.lastname = lastname;
		this.createddatetime = createddatetime;
		this.nicNumber = nicNumber;
		this.mobilephonenumber = mobilephonenumber;
		this.enabled = enabled;
		this.isOutletUser = isOutletUser;
		this.addedDateTime = addedDateTime;
		this.lastModifiedDateTime = lastModifiedDateTime;
		this.lastModifiedFields = lastModifiedFields;
		this.pointRewardTypesForAddedByRef = pointRewardTypesForAddedByRef;
		this.customerRequestses = customerRequestses;
		this.leafletsForLastModifiedByRef = leafletsForLastModifiedByRef;
		this.payments = payments;
		this.accessPrivillegesesForLastModifiedByRef = accessPrivillegesesForLastModifiedByRef;
		this.pointConversionsForLastModifiedByRef = pointConversionsForLastModifiedByRef;
		this.merchantCustomerUnipointRewardsesForAddedByRef = merchantCustomerUnipointRewardsesForAddedByRef;
		this.assignedCouponsesForAddedByRef = assignedCouponsesForAddedByRef;
		this.faqsForLastModifiedByRef = faqsForLastModifiedByRef;
		this.buyPointsForAddedByRef = buyPointsForAddedByRef;
		this.merchantCustomersForAddedByRef = merchantCustomersForAddedByRef;
		this.merchantUsersForAddedByRef = merchantUsersForAddedByRef;
		this.catagoriesForAddedByRef = catagoriesForAddedByRef;
		this.feedbackTemplatesForAddedByRef = feedbackTemplatesForAddedByRef;
		this.offersForAddedByRef = offersForAddedByRef;
		this.catagoriesForLastModifiedByRef = catagoriesForLastModifiedByRef;
		this.appInvitesForAddedByRef = appInvitesForAddedByRef;
		this.faqsForAddedByRef = faqsForAddedByRef;
		this.pointRewardsesForAddedByRef = pointRewardsesForAddedByRef;
		this.subscribeMerchantsForLastModifiedByRef = subscribeMerchantsForLastModifiedByRef;
		this.assingedVouchersForAddedByRef = assingedVouchersForAddedByRef;
		this.merchantCustomersForLastModifiedByRef = merchantCustomersForLastModifiedByRef;
		this.buyPointsForLastModifiedByRef = buyPointsForLastModifiedByRef;
		this.outletsForLastModifiedByRef = outletsForLastModifiedByRef;
		this.vouchersesForLastModifiedByRef = vouchersesForLastModifiedByRef;
		this.pointRewardTypesForLastModifiedByRef = pointRewardTypesForLastModifiedByRef;
		this.subscribeMerchantsForAddedByRef = subscribeMerchantsForAddedByRef;
		this.loyaltySchemesForLastModifiedByRef = loyaltySchemesForLastModifiedByRef;
		this.loyaltySchemesForAddedByRef = loyaltySchemesForAddedByRef;
		this.organizationsForAddedByRef = organizationsForAddedByRef;
		this.vouchersesForAssignedByRef = vouchersesForAssignedByRef;
		this.couponses = couponses;
		this.assingedVouchersForClaimedByMerchantUserRefId = assingedVouchersForClaimedByMerchantUserRefId;
		this.pointConversionsForAddedByRef = pointConversionsForAddedByRef;
		this.organizationsForLastModifiedByRef = organizationsForLastModifiedByRef;
		this.appInvitesForLastModifiedByRef = appInvitesForLastModifiedByRef;
		this.merchantFeedbacks = merchantFeedbacks;
		this.merchantCategoriesForLastModifiedByRef = merchantCategoriesForLastModifiedByRef;
		this.assignedCouponsesForLastModifiedByRef = assignedCouponsesForLastModifiedByRef;
		this.accessPrivillegesesForAddedByRef = accessPrivillegesesForAddedByRef;
		this.merchantsForAddedByRef = merchantsForAddedByRef;
		this.pointRewardsesForLastModifiedByRef = pointRewardsesForLastModifiedByRef;
		this.disabledCustomersForAddedByRef = disabledCustomersForAddedByRef;
		this.outletsForAddedByRef = outletsForAddedByRef;
		this.vouchersesForCreatedByRef = vouchersesForCreatedByRef;
		this.vouchersesForAssignedByRef_1 = vouchersesForAssignedByRef_1;
		this.assingedVouchersForAssignedByMerchantUserRefId = assingedVouchersForAssignedByMerchantUserRefId;
		this.merchantCustomerUnipointRewardsesForLastModifiedByRef = merchantCustomerUnipointRewardsesForLastModifiedByRef;
		this.offerLeafletsForAddedByRef = offerLeafletsForAddedByRef;
		this.productsForAddedbyRefId = productsForAddedbyRefId;
		this.leafletsForAddedByRef = leafletsForAddedByRef;
		this.merchantProfilesForAddedByRef = merchantProfilesForAddedByRef;
		this.offerClaimsForLastModifiedByRef = offerClaimsForLastModifiedByRef;
		this.merchantCategoriesForAddedByRef = merchantCategoriesForAddedByRef;
		this.merchantProfilesForLastModifiedByRef = merchantProfilesForLastModifiedByRef;
		this.productsForLastModifiedByRef = productsForLastModifiedByRef;
		this.merchantsForLastModifiedByRef = merchantsForLastModifiedByRef;
		this.disabledCustomersForLastModifiedByRef = disabledCustomersForLastModifiedByRef;
		this.productsForAddedByRef = productsForAddedByRef;
		this.assingedVouchersForLastModifiedByRef = assingedVouchersForLastModifiedByRef;
		this.offerLeafletsForLastModifiedByRef = offerLeafletsForLastModifiedByRef;
		this.offersForLastModifiedByRef = offersForLastModifiedByRef;
		this.offerClaimsForAddedByRef = offerClaimsForAddedByRef;
		this.feedbackTemplatesForLastModifiedByRef = feedbackTemplatesForLastModifiedByRef;
		this.merchantUsersForLastModifiedByRef = merchantUsersForLastModifiedByRef;
	}

	@Id

	@Column(name = "merchant_user_id", unique = true, nullable = false)
	public long getMerchantUserId() {
		return this.merchantUserId;
	}

	public void setMerchantUserId(long merchantUserId) {
		this.merchantUserId = merchantUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "access_level_ref_id")
	public AccessPrivilleges getAccessPrivilleges() {
		return this.accessPrivilleges;
	}

	public void setAccessPrivilleges(AccessPrivilleges accessPrivilleges) {
		this.accessPrivilleges = accessPrivilleges;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "merchant_ref_id")
	public Merchant getMerchant() {
		return this.merchant;
	}

	public void setMerchant(Merchant merchant) {
		this.merchant = merchant;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "added_by_ref")
	public MerchantUser getMerchantUserByAddedByRef() {
		return this.merchantUserByAddedByRef;
	}

	public void setMerchantUserByAddedByRef(MerchantUser merchantUserByAddedByRef) {
		this.merchantUserByAddedByRef = merchantUserByAddedByRef;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "last_modified_by_ref")
	public MerchantUser getMerchantUserByLastModifiedByRef() {
		return this.merchantUserByLastModifiedByRef;
	}

	public void setMerchantUserByLastModifiedByRef(MerchantUser merchantUserByLastModifiedByRef) {
		this.merchantUserByLastModifiedByRef = merchantUserByLastModifiedByRef;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "outlet_ref_id")
	public Outlet getOutlet() {
		return this.outlet;
	}

	public void setOutlet(Outlet outlet) {
		this.outlet = outlet;
	}

	@Column(name = "username")
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "emailaddress", length = 100)
	public String getEmailaddress() {
		return this.emailaddress;
	}

	public void setEmailaddress(String emailaddress) {
		this.emailaddress = emailaddress;
	}

	@Column(name = "firstname")
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "lastname")
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "createddatetime", length = 100)
	public String getCreateddatetime() {
		return this.createddatetime;
	}

	public void setCreateddatetime(String createddatetime) {
		this.createddatetime = createddatetime;
	}

	@Column(name = "nic_number")
	public String getNicNumber() {
		return this.nicNumber;
	}

	public void setNicNumber(String nicNumber) {
		this.nicNumber = nicNumber;
	}

	@Column(name = "mobilephonenumber", precision = 131089, scale = 0)
	public BigDecimal getMobilephonenumber() {
		return this.mobilephonenumber;
	}

	public void setMobilephonenumber(BigDecimal mobilephonenumber) {
		this.mobilephonenumber = mobilephonenumber;
	}

	@Column(name = "enabled", length = 5)
	public String getEnabled() {
		return this.enabled;
	}

	public void setEnabled(String enabled) {
		this.enabled = enabled;
	}

	@Column(name = "is_outlet_user", length = 5)
	public String getIsOutletUser() {
		return this.isOutletUser;
	}

	public void setIsOutletUser(String isOutletUser) {
		this.isOutletUser = isOutletUser;
	}

	@Column(name = "added_date_time", length = 50)
	public String getAddedDateTime() {
		return this.addedDateTime;
	}

	public void setAddedDateTime(String addedDateTime) {
		this.addedDateTime = addedDateTime;
	}

	@Column(name = "last_modified_date_time", length = 50)
	public String getLastModifiedDateTime() {
		return this.lastModifiedDateTime;
	}

	public void setLastModifiedDateTime(String lastModifiedDateTime) {
		this.lastModifiedDateTime = lastModifiedDateTime;
	}

	@Column(name = "last_modified_fields")
	public String getLastModifiedFields() {
		return this.lastModifiedFields;
	}

	public void setLastModifiedFields(String lastModifiedFields) {
		this.lastModifiedFields = lastModifiedFields;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<PointRewardType> getPointRewardTypesForAddedByRef() {
		return this.pointRewardTypesForAddedByRef;
	}

	public void setPointRewardTypesForAddedByRef(Set<PointRewardType> pointRewardTypesForAddedByRef) {
		this.pointRewardTypesForAddedByRef = pointRewardTypesForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUser")
	public Set<CustomerRequests> getCustomerRequestses() {
		return this.customerRequestses;
	}

	public void setCustomerRequestses(Set<CustomerRequests> customerRequestses) {
		this.customerRequestses = customerRequestses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<Leaflet> getLeafletsForLastModifiedByRef() {
		return this.leafletsForLastModifiedByRef;
	}

	public void setLeafletsForLastModifiedByRef(Set<Leaflet> leafletsForLastModifiedByRef) {
		this.leafletsForLastModifiedByRef = leafletsForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUser")
	public Set<Payment> getPayments() {
		return this.payments;
	}

	public void setPayments(Set<Payment> payments) {
		this.payments = payments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<AccessPrivilleges> getAccessPrivillegesesForLastModifiedByRef() {
		return this.accessPrivillegesesForLastModifiedByRef;
	}

	public void setAccessPrivillegesesForLastModifiedByRef(
			Set<AccessPrivilleges> accessPrivillegesesForLastModifiedByRef) {
		this.accessPrivillegesesForLastModifiedByRef = accessPrivillegesesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<PointConversion> getPointConversionsForLastModifiedByRef() {
		return this.pointConversionsForLastModifiedByRef;
	}

	public void setPointConversionsForLastModifiedByRef(Set<PointConversion> pointConversionsForLastModifiedByRef) {
		this.pointConversionsForLastModifiedByRef = pointConversionsForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<MerchantCustomerUnipointRewards> getMerchantCustomerUnipointRewardsesForAddedByRef() {
		return this.merchantCustomerUnipointRewardsesForAddedByRef;
	}

	public void setMerchantCustomerUnipointRewardsesForAddedByRef(
			Set<MerchantCustomerUnipointRewards> merchantCustomerUnipointRewardsesForAddedByRef) {
		this.merchantCustomerUnipointRewardsesForAddedByRef = merchantCustomerUnipointRewardsesForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<AssignedCoupons> getAssignedCouponsesForAddedByRef() {
		return this.assignedCouponsesForAddedByRef;
	}

	public void setAssignedCouponsesForAddedByRef(Set<AssignedCoupons> assignedCouponsesForAddedByRef) {
		this.assignedCouponsesForAddedByRef = assignedCouponsesForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<Faq> getFaqsForLastModifiedByRef() {
		return this.faqsForLastModifiedByRef;
	}

	public void setFaqsForLastModifiedByRef(Set<Faq> faqsForLastModifiedByRef) {
		this.faqsForLastModifiedByRef = faqsForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<BuyPoint> getBuyPointsForAddedByRef() {
		return this.buyPointsForAddedByRef;
	}

	public void setBuyPointsForAddedByRef(Set<BuyPoint> buyPointsForAddedByRef) {
		this.buyPointsForAddedByRef = buyPointsForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<MerchantCustomer> getMerchantCustomersForAddedByRef() {
		return this.merchantCustomersForAddedByRef;
	}

	public void setMerchantCustomersForAddedByRef(Set<MerchantCustomer> merchantCustomersForAddedByRef) {
		this.merchantCustomersForAddedByRef = merchantCustomersForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<MerchantUser> getMerchantUsersForAddedByRef() {
		return this.merchantUsersForAddedByRef;
	}

	public void setMerchantUsersForAddedByRef(Set<MerchantUser> merchantUsersForAddedByRef) {
		this.merchantUsersForAddedByRef = merchantUsersForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<Catagory> getCatagoriesForAddedByRef() {
		return this.catagoriesForAddedByRef;
	}

	public void setCatagoriesForAddedByRef(Set<Catagory> catagoriesForAddedByRef) {
		this.catagoriesForAddedByRef = catagoriesForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<FeedbackTemplate> getFeedbackTemplatesForAddedByRef() {
		return this.feedbackTemplatesForAddedByRef;
	}

	public void setFeedbackTemplatesForAddedByRef(Set<FeedbackTemplate> feedbackTemplatesForAddedByRef) {
		this.feedbackTemplatesForAddedByRef = feedbackTemplatesForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<Offer> getOffersForAddedByRef() {
		return this.offersForAddedByRef;
	}

	public void setOffersForAddedByRef(Set<Offer> offersForAddedByRef) {
		this.offersForAddedByRef = offersForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<Catagory> getCatagoriesForLastModifiedByRef() {
		return this.catagoriesForLastModifiedByRef;
	}

	public void setCatagoriesForLastModifiedByRef(Set<Catagory> catagoriesForLastModifiedByRef) {
		this.catagoriesForLastModifiedByRef = catagoriesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<AppInvite> getAppInvitesForAddedByRef() {
		return this.appInvitesForAddedByRef;
	}

	public void setAppInvitesForAddedByRef(Set<AppInvite> appInvitesForAddedByRef) {
		this.appInvitesForAddedByRef = appInvitesForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<Faq> getFaqsForAddedByRef() {
		return this.faqsForAddedByRef;
	}

	public void setFaqsForAddedByRef(Set<Faq> faqsForAddedByRef) {
		this.faqsForAddedByRef = faqsForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<PointRewards> getPointRewardsesForAddedByRef() {
		return this.pointRewardsesForAddedByRef;
	}

	public void setPointRewardsesForAddedByRef(Set<PointRewards> pointRewardsesForAddedByRef) {
		this.pointRewardsesForAddedByRef = pointRewardsesForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<SubscribeMerchant> getSubscribeMerchantsForLastModifiedByRef() {
		return this.subscribeMerchantsForLastModifiedByRef;
	}

	public void setSubscribeMerchantsForLastModifiedByRef(
			Set<SubscribeMerchant> subscribeMerchantsForLastModifiedByRef) {
		this.subscribeMerchantsForLastModifiedByRef = subscribeMerchantsForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<AssingedVoucher> getAssingedVouchersForAddedByRef() {
		return this.assingedVouchersForAddedByRef;
	}

	public void setAssingedVouchersForAddedByRef(Set<AssingedVoucher> assingedVouchersForAddedByRef) {
		this.assingedVouchersForAddedByRef = assingedVouchersForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<MerchantCustomer> getMerchantCustomersForLastModifiedByRef() {
		return this.merchantCustomersForLastModifiedByRef;
	}

	public void setMerchantCustomersForLastModifiedByRef(Set<MerchantCustomer> merchantCustomersForLastModifiedByRef) {
		this.merchantCustomersForLastModifiedByRef = merchantCustomersForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<BuyPoint> getBuyPointsForLastModifiedByRef() {
		return this.buyPointsForLastModifiedByRef;
	}

	public void setBuyPointsForLastModifiedByRef(Set<BuyPoint> buyPointsForLastModifiedByRef) {
		this.buyPointsForLastModifiedByRef = buyPointsForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<Outlet> getOutletsForLastModifiedByRef() {
		return this.outletsForLastModifiedByRef;
	}

	public void setOutletsForLastModifiedByRef(Set<Outlet> outletsForLastModifiedByRef) {
		this.outletsForLastModifiedByRef = outletsForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<Vouchers> getVouchersesForLastModifiedByRef() {
		return this.vouchersesForLastModifiedByRef;
	}

	public void setVouchersesForLastModifiedByRef(Set<Vouchers> vouchersesForLastModifiedByRef) {
		this.vouchersesForLastModifiedByRef = vouchersesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<PointRewardType> getPointRewardTypesForLastModifiedByRef() {
		return this.pointRewardTypesForLastModifiedByRef;
	}

	public void setPointRewardTypesForLastModifiedByRef(Set<PointRewardType> pointRewardTypesForLastModifiedByRef) {
		this.pointRewardTypesForLastModifiedByRef = pointRewardTypesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<SubscribeMerchant> getSubscribeMerchantsForAddedByRef() {
		return this.subscribeMerchantsForAddedByRef;
	}

	public void setSubscribeMerchantsForAddedByRef(Set<SubscribeMerchant> subscribeMerchantsForAddedByRef) {
		this.subscribeMerchantsForAddedByRef = subscribeMerchantsForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<LoyaltyScheme> getLoyaltySchemesForLastModifiedByRef() {
		return this.loyaltySchemesForLastModifiedByRef;
	}

	public void setLoyaltySchemesForLastModifiedByRef(Set<LoyaltyScheme> loyaltySchemesForLastModifiedByRef) {
		this.loyaltySchemesForLastModifiedByRef = loyaltySchemesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<LoyaltyScheme> getLoyaltySchemesForAddedByRef() {
		return this.loyaltySchemesForAddedByRef;
	}

	public void setLoyaltySchemesForAddedByRef(Set<LoyaltyScheme> loyaltySchemesForAddedByRef) {
		this.loyaltySchemesForAddedByRef = loyaltySchemesForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<Organization> getOrganizationsForAddedByRef() {
		return this.organizationsForAddedByRef;
	}

	public void setOrganizationsForAddedByRef(Set<Organization> organizationsForAddedByRef) {
		this.organizationsForAddedByRef = organizationsForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAssignedByRef")
	public Set<Vouchers> getVouchersesForAssignedByRef() {
		return this.vouchersesForAssignedByRef;
	}

	public void setVouchersesForAssignedByRef(Set<Vouchers> vouchersesForAssignedByRef) {
		this.vouchersesForAssignedByRef = vouchersesForAssignedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUser")
	public Set<Coupons> getCouponses() {
		return this.couponses;
	}

	public void setCouponses(Set<Coupons> couponses) {
		this.couponses = couponses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByClaimedByMerchantUserRefId")
	public Set<AssingedVoucher> getAssingedVouchersForClaimedByMerchantUserRefId() {
		return this.assingedVouchersForClaimedByMerchantUserRefId;
	}

	public void setAssingedVouchersForClaimedByMerchantUserRefId(
			Set<AssingedVoucher> assingedVouchersForClaimedByMerchantUserRefId) {
		this.assingedVouchersForClaimedByMerchantUserRefId = assingedVouchersForClaimedByMerchantUserRefId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<PointConversion> getPointConversionsForAddedByRef() {
		return this.pointConversionsForAddedByRef;
	}

	public void setPointConversionsForAddedByRef(Set<PointConversion> pointConversionsForAddedByRef) {
		this.pointConversionsForAddedByRef = pointConversionsForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<Organization> getOrganizationsForLastModifiedByRef() {
		return this.organizationsForLastModifiedByRef;
	}

	public void setOrganizationsForLastModifiedByRef(Set<Organization> organizationsForLastModifiedByRef) {
		this.organizationsForLastModifiedByRef = organizationsForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<AppInvite> getAppInvitesForLastModifiedByRef() {
		return this.appInvitesForLastModifiedByRef;
	}

	public void setAppInvitesForLastModifiedByRef(Set<AppInvite> appInvitesForLastModifiedByRef) {
		this.appInvitesForLastModifiedByRef = appInvitesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUser")
	public Set<MerchantFeedback> getMerchantFeedbacks() {
		return this.merchantFeedbacks;
	}

	public void setMerchantFeedbacks(Set<MerchantFeedback> merchantFeedbacks) {
		this.merchantFeedbacks = merchantFeedbacks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<MerchantCategory> getMerchantCategoriesForLastModifiedByRef() {
		return this.merchantCategoriesForLastModifiedByRef;
	}

	public void setMerchantCategoriesForLastModifiedByRef(
			Set<MerchantCategory> merchantCategoriesForLastModifiedByRef) {
		this.merchantCategoriesForLastModifiedByRef = merchantCategoriesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<AssignedCoupons> getAssignedCouponsesForLastModifiedByRef() {
		return this.assignedCouponsesForLastModifiedByRef;
	}

	public void setAssignedCouponsesForLastModifiedByRef(Set<AssignedCoupons> assignedCouponsesForLastModifiedByRef) {
		this.assignedCouponsesForLastModifiedByRef = assignedCouponsesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<AccessPrivilleges> getAccessPrivillegesesForAddedByRef() {
		return this.accessPrivillegesesForAddedByRef;
	}

	public void setAccessPrivillegesesForAddedByRef(Set<AccessPrivilleges> accessPrivillegesesForAddedByRef) {
		this.accessPrivillegesesForAddedByRef = accessPrivillegesesForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<Merchant> getMerchantsForAddedByRef() {
		return this.merchantsForAddedByRef;
	}

	public void setMerchantsForAddedByRef(Set<Merchant> merchantsForAddedByRef) {
		this.merchantsForAddedByRef = merchantsForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<PointRewards> getPointRewardsesForLastModifiedByRef() {
		return this.pointRewardsesForLastModifiedByRef;
	}

	public void setPointRewardsesForLastModifiedByRef(Set<PointRewards> pointRewardsesForLastModifiedByRef) {
		this.pointRewardsesForLastModifiedByRef = pointRewardsesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<DisabledCustomer> getDisabledCustomersForAddedByRef() {
		return this.disabledCustomersForAddedByRef;
	}

	public void setDisabledCustomersForAddedByRef(Set<DisabledCustomer> disabledCustomersForAddedByRef) {
		this.disabledCustomersForAddedByRef = disabledCustomersForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<Outlet> getOutletsForAddedByRef() {
		return this.outletsForAddedByRef;
	}

	public void setOutletsForAddedByRef(Set<Outlet> outletsForAddedByRef) {
		this.outletsForAddedByRef = outletsForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByCreatedByRef")
	public Set<Vouchers> getVouchersesForCreatedByRef() {
		return this.vouchersesForCreatedByRef;
	}

	public void setVouchersesForCreatedByRef(Set<Vouchers> vouchersesForCreatedByRef) {
		this.vouchersesForCreatedByRef = vouchersesForCreatedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAssignedByRef")
	public Set<Vouchers> getVouchersesForAssignedByRef_1() {
		return this.vouchersesForAssignedByRef_1;
	}

	public void setVouchersesForAssignedByRef_1(Set<Vouchers> vouchersesForAssignedByRef_1) {
		this.vouchersesForAssignedByRef_1 = vouchersesForAssignedByRef_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAssignedByMerchantUserRefId")
	public Set<AssingedVoucher> getAssingedVouchersForAssignedByMerchantUserRefId() {
		return this.assingedVouchersForAssignedByMerchantUserRefId;
	}

	public void setAssingedVouchersForAssignedByMerchantUserRefId(
			Set<AssingedVoucher> assingedVouchersForAssignedByMerchantUserRefId) {
		this.assingedVouchersForAssignedByMerchantUserRefId = assingedVouchersForAssignedByMerchantUserRefId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<MerchantCustomerUnipointRewards> getMerchantCustomerUnipointRewardsesForLastModifiedByRef() {
		return this.merchantCustomerUnipointRewardsesForLastModifiedByRef;
	}

	public void setMerchantCustomerUnipointRewardsesForLastModifiedByRef(
			Set<MerchantCustomerUnipointRewards> merchantCustomerUnipointRewardsesForLastModifiedByRef) {
		this.merchantCustomerUnipointRewardsesForLastModifiedByRef = merchantCustomerUnipointRewardsesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<OfferLeaflet> getOfferLeafletsForAddedByRef() {
		return this.offerLeafletsForAddedByRef;
	}

	public void setOfferLeafletsForAddedByRef(Set<OfferLeaflet> offerLeafletsForAddedByRef) {
		this.offerLeafletsForAddedByRef = offerLeafletsForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedbyRefId")
	public Set<Product> getProductsForAddedbyRefId() {
		return this.productsForAddedbyRefId;
	}

	public void setProductsForAddedbyRefId(Set<Product> productsForAddedbyRefId) {
		this.productsForAddedbyRefId = productsForAddedbyRefId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<Leaflet> getLeafletsForAddedByRef() {
		return this.leafletsForAddedByRef;
	}

	public void setLeafletsForAddedByRef(Set<Leaflet> leafletsForAddedByRef) {
		this.leafletsForAddedByRef = leafletsForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<MerchantProfile> getMerchantProfilesForAddedByRef() {
		return this.merchantProfilesForAddedByRef;
	}

	public void setMerchantProfilesForAddedByRef(Set<MerchantProfile> merchantProfilesForAddedByRef) {
		this.merchantProfilesForAddedByRef = merchantProfilesForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<OfferClaim> getOfferClaimsForLastModifiedByRef() {
		return this.offerClaimsForLastModifiedByRef;
	}

	public void setOfferClaimsForLastModifiedByRef(Set<OfferClaim> offerClaimsForLastModifiedByRef) {
		this.offerClaimsForLastModifiedByRef = offerClaimsForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<MerchantCategory> getMerchantCategoriesForAddedByRef() {
		return this.merchantCategoriesForAddedByRef;
	}

	public void setMerchantCategoriesForAddedByRef(Set<MerchantCategory> merchantCategoriesForAddedByRef) {
		this.merchantCategoriesForAddedByRef = merchantCategoriesForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<MerchantProfile> getMerchantProfilesForLastModifiedByRef() {
		return this.merchantProfilesForLastModifiedByRef;
	}

	public void setMerchantProfilesForLastModifiedByRef(Set<MerchantProfile> merchantProfilesForLastModifiedByRef) {
		this.merchantProfilesForLastModifiedByRef = merchantProfilesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<Product> getProductsForLastModifiedByRef() {
		return this.productsForLastModifiedByRef;
	}

	public void setProductsForLastModifiedByRef(Set<Product> productsForLastModifiedByRef) {
		this.productsForLastModifiedByRef = productsForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<Merchant> getMerchantsForLastModifiedByRef() {
		return this.merchantsForLastModifiedByRef;
	}

	public void setMerchantsForLastModifiedByRef(Set<Merchant> merchantsForLastModifiedByRef) {
		this.merchantsForLastModifiedByRef = merchantsForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<DisabledCustomer> getDisabledCustomersForLastModifiedByRef() {
		return this.disabledCustomersForLastModifiedByRef;
	}

	public void setDisabledCustomersForLastModifiedByRef(Set<DisabledCustomer> disabledCustomersForLastModifiedByRef) {
		this.disabledCustomersForLastModifiedByRef = disabledCustomersForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<Product> getProductsForAddedByRef() {
		return this.productsForAddedByRef;
	}

	public void setProductsForAddedByRef(Set<Product> productsForAddedByRef) {
		this.productsForAddedByRef = productsForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<AssingedVoucher> getAssingedVouchersForLastModifiedByRef() {
		return this.assingedVouchersForLastModifiedByRef;
	}

	public void setAssingedVouchersForLastModifiedByRef(Set<AssingedVoucher> assingedVouchersForLastModifiedByRef) {
		this.assingedVouchersForLastModifiedByRef = assingedVouchersForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<OfferLeaflet> getOfferLeafletsForLastModifiedByRef() {
		return this.offerLeafletsForLastModifiedByRef;
	}

	public void setOfferLeafletsForLastModifiedByRef(Set<OfferLeaflet> offerLeafletsForLastModifiedByRef) {
		this.offerLeafletsForLastModifiedByRef = offerLeafletsForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<Offer> getOffersForLastModifiedByRef() {
		return this.offersForLastModifiedByRef;
	}

	public void setOffersForLastModifiedByRef(Set<Offer> offersForLastModifiedByRef) {
		this.offersForLastModifiedByRef = offersForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByAddedByRef")
	public Set<OfferClaim> getOfferClaimsForAddedByRef() {
		return this.offerClaimsForAddedByRef;
	}

	public void setOfferClaimsForAddedByRef(Set<OfferClaim> offerClaimsForAddedByRef) {
		this.offerClaimsForAddedByRef = offerClaimsForAddedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<FeedbackTemplate> getFeedbackTemplatesForLastModifiedByRef() {
		return this.feedbackTemplatesForLastModifiedByRef;
	}

	public void setFeedbackTemplatesForLastModifiedByRef(Set<FeedbackTemplate> feedbackTemplatesForLastModifiedByRef) {
		this.feedbackTemplatesForLastModifiedByRef = feedbackTemplatesForLastModifiedByRef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchantUserByLastModifiedByRef")
	public Set<MerchantUser> getMerchantUsersForLastModifiedByRef() {
		return this.merchantUsersForLastModifiedByRef;
	}

	public void setMerchantUsersForLastModifiedByRef(Set<MerchantUser> merchantUsersForLastModifiedByRef) {
		this.merchantUsersForLastModifiedByRef = merchantUsersForLastModifiedByRef;
	}

}
